#include <iostream>
#include <omp.h>
#include <queue>
using namespace std;

void bubble(int*a, int n){
    for(int i =0; i<n; i++){
        int first = i%2;
        #pragma omp parallel for shared(a, first)
        for (int j =first; j<n-1; j+=2){
            if(a[j]<a[j+1]){
                swap(a[j],a[j+1]);
            }
        }
    }
}
void swap(int& a,int& b){
    int test = a;
    a = b;
    b = test;
}

int main(){
    int *a,n;
    cout<< "number of elements in the array"<<endl;
    cin>> n;
    a = new int[n];
    cout<<"enter all the elements one by one"<<endl;
    for(int i =0; i<n; i++){
        cin>> a[i];
    }
    bubble(a, n);
    cout<<"sorted array is";
    for(int i =0; i<n; i++){
        cout<< a[i];
    }
    return 0;
}
